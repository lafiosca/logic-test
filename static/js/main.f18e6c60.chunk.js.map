{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["Operation","Letter","niceOperationNames","getOperationOptions","options","k","isNaN","Number","v","push","react_default","a","createElement","key","value","getLetterOptions","operation","letterNum","vNum","opNum","initializeQuestions","questions","i","choices","j","None","letter1","letter2","solutions","isChoiceValid","choice","c","truthTable","targetTruth","True","False","IsCorrect","IsNotCorrect","And","Or","Xor","Nand","Nor","App","state","solve","q","_this","s","console","log","concat","JSON","stringify","valid","setState","map","question","oq","Object","objectSpread","selectOperation","e","newChoices","oc","target","selectLetter","renderChoice","className","id","onChange","disabled","renderQuestion","length","solution","binary","b","join","index","parseInt","letter","String","fromCharCode","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f18e6c60.chunk.js","sourcesContent":["import React, { Component, ChangeEvent } from 'react';\nimport './App.css';\n\ninterface Props {}\n\nenum Operation {\n\tNone = -1,\n\tTrue = 0,\n\tFalse = 1,\n\tIsCorrect = 2,\n\tIsNotCorrect = 3,\n\tAnd = 4,\n\tOr = 5,\n\tXor = 6,\n\tNand = 7,\n\tNor = 8,\n}\n\nenum Letter {\n\tNone = -1,\n\tA = 0,\n\tB = 1,\n\tC = 2,\n\tD = 3,\n\tE = 4,\n}\n\ninterface Choice {\n\toperation: Operation;\n\tletter1: Letter;\n\tletter2: Letter;\n}\n\ninterface Question {\n\tchoices: Choice[];\n\tsolutions: boolean[][];\n}\n\ninterface State {\n\tquestions: Question[];\n}\n\nconst niceOperationNames = [\n\t'Sky is blue',\n\t'Pigs can fly',\n\t'is correct',\n\t'is incorrect',\n\t'are correct',\n\t'either is correct (or both)',\n\t'exactly one is correct',\n\t'not both correct',\n\t'neither is correct',\n];\n\nconst getOperationOptions = () => {\n\tconst options: JSX.Element[] = [];\n\tfor (const k in Operation) {\n\t\tif (isNaN(Number(k))) {\n\t\t\tconst v = Operation[k];\n\t\t\toptions.push((\n\t\t\t\t<option key={k} value={v}>{Number(v) >= 0 ? niceOperationNames[v] : '--'}</option>\n\t\t\t));\n\t\t}\n\t}\n\treturn options;\n};\n\nconst getLetterOptions = (operation: Operation, letterNum: number) => {\n\tconst options: JSX.Element[] = [];\n\tfor (const k in Letter) {\n\t\tif (isNaN(Number(k))) {\n\t\t\tconst v = Letter[k];\n\t\t\tconst vNum = Number(v);\n\t\t\tconst opNum = Number(operation);\n\t\t\tif (vNum === -1 || (letterNum === 1 && opNum >= 2) || (letterNum === 2 && opNum >= 4)) {\n\t\t\t\toptions.push((\n\t\t\t\t\t<option key={k} value={v}>{k}</option>\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t}\n\treturn options;\n};\n\nconst initializeQuestions = () => {\n\tconst questions: Question[] = [];\n\tfor (let i = 0; i < 12; i += 1) {\n\t\tconst choices: Choice[] = [];\n\t\tfor (let j = 0; j < 5; j += 1) {\n\t\t\tchoices.push({\n\t\t\t\toperation: Operation.None,\n\t\t\t\tletter1: Letter.None,\n\t\t\t\tletter2: Letter.None,\n\t\t\t});\n\t\t}\n\t\tquestions.push({\n\t\t\tchoices,\n\t\t\tsolutions: [],\n\t\t});\n\t}\n\treturn questions;\n};\n\nconst isChoiceValid = (choice: Choice, c: number, truthTable: boolean[]) => {\n\tlet targetTruth: boolean | null = null;\n\tswitch (choice.operation) {\n\t\tcase Operation.True:\n\t\t\ttargetTruth = true;\n\t\t\tbreak;\n\t\tcase Operation.False:\n\t\t\ttargetTruth = false;\n\t\t\tbreak;\n\t\tcase Operation.IsCorrect:\n\t\t\tif (choice.letter1 !== Letter.None) {\n\t\t\t\ttargetTruth = truthTable[choice.letter1];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Operation.IsNotCorrect:\n\t\t\tif (choice.letter1 !== Letter.None) {\n\t\t\t\ttargetTruth = !truthTable[choice.letter1];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Operation.And:\n\t\t\tif (choice.letter1 !== Letter.None && choice.letter2 !== Letter.None) {\n\t\t\t\ttargetTruth = truthTable[choice.letter1] && truthTable[choice.letter2];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Operation.Or:\n\t\t\tif (choice.letter1 !== Letter.None && choice.letter2 !== Letter.None) {\n\t\t\t\ttargetTruth = truthTable[choice.letter1] || truthTable[choice.letter2];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Operation.Xor:\n\t\t\tif (choice.letter1 !== Letter.None && choice.letter2 !== Letter.None) {\n\t\t\t\ttargetTruth = truthTable[choice.letter1]\n\t\t\t\t\t? !truthTable[choice.letter2]\n\t\t\t\t\t: truthTable[choice.letter2];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Operation.Nand:\n\t\t\tif (choice.letter1 !== Letter.None && choice.letter2 !== Letter.None) {\n\t\t\t\ttargetTruth = !truthTable[choice.letter1] || !truthTable[choice.letter2];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase Operation.Nor:\n\t\t\tif (choice.letter1 !== Letter.None && choice.letter2 !== Letter.None) {\n\t\t\t\ttargetTruth = !truthTable[choice.letter1] && !truthTable[choice.letter2];\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn (targetTruth === null) || (truthTable[c] === targetTruth);\n};\n\nclass App extends Component<Props, State> {\n\treadonly state: Readonly<State> = {\n\t\tquestions: initializeQuestions(),\n\t};\n\n\tsolve = (q: number) => {\n\t\tconst { choices } = this.state.questions[q];\n\t\tconst solutions: boolean[][] = [];\n\t\tfor (let s = 1; s <= 26; s += 1) {\n\t\t\tconst truthTable = [\n\t\t\t\ts >> 4 === 1,\n\t\t\t\ts % 16 >> 3 === 1,\n\t\t\t\ts % 8 >> 2 === 1,\n\t\t\t\ts % 4 >> 1 === 1,\n\t\t\t\ts % 2 === 1,\n\t\t\t];\n\t\t\tconsole.log(`truthTable for ${s}: ${JSON.stringify(truthTable)}`);\n\t\t\tlet valid = true;\n\t\t\tfor (let c = 0; valid && c < 5; c += 1) {\n\t\t\t\tvalid = isChoiceValid(choices[c], c, truthTable);\n\t\t\t}\n\t\t\tif (valid) {\n\t\t\t\tconsole.log(`${s} is valid`);\n\t\t\t\tsolutions.push(truthTable);\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tquestions: this.state.questions.map((question, oq) =>\n\t\t\t\t(oq !== q) ? question : {\n\t\t\t\t\t...question,\n\t\t\t\t\tsolutions,\n\t\t\t\t}),\n\t\t});\n\t}\n\n\tselectOperation = (q: number, c: number, e: ChangeEvent<HTMLSelectElement>) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tquestions: this.state.questions.map((question, oq) => {\n\t\t\t\t\tif (oq !== q) {\n\t\t\t\t\t\treturn question;\n\t\t\t\t\t}\n\t\t\t\t\tconst newChoices = question.choices.map((choice, oc) => {\n\t\t\t\t\t\tif (oc !== c) {\n\t\t\t\t\t\t\treturn choice;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\toperation: Number(e.target.value),\n\t\t\t\t\t\t\tletter1: Letter.None,\n\t\t\t\t\t\t\tletter2: Letter.None,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...question,\n\t\t\t\t\t\tchoices: newChoices,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t},\n\t\t\t() => this.solve(q),\n\t\t);\n\t}\n\n\tselectLetter = (\n\t\tq: number,\n\t\tc: number,\n\t\tletterNum: number,\n\t\te: ChangeEvent<HTMLSelectElement>,\n\t) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tquestions: this.state.questions.map((question, oq) => {\n\t\t\t\t\tif (oq !== q) {\n\t\t\t\t\t\treturn question;\n\t\t\t\t\t}\n\t\t\t\t\tconst newChoices = question.choices.map((choice, oc) => {\n\t\t\t\t\t\tif (oc !== c) {\n\t\t\t\t\t\t\treturn choice;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\toperation: choice.operation,\n\t\t\t\t\t\t\tletter1: letterNum === 1 ? Number(e.target.value) : choice.letter1,\n\t\t\t\t\t\t\tletter2: letterNum === 2 ? Number(e.target.value) : choice.letter2,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...question,\n\t\t\t\t\t\tchoices: newChoices,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t},\n\t\t\t() => this.solve(q),\n\t\t);\n\t}\n\n\trenderChoice = (choice: Choice, q: number, c: number) => {\n\t\tconst {\n\t\t\toperation,\n\t\t\tletter1,\n\t\t\tletter2,\n\t\t} = choice;\n\t\treturn (\n\t\t\t<div className=\"choice\" key={c}>\n\t\t\t\t<select\n\t\t\t\t\tid=\"operation\"\n\t\t\t\t\tvalue={operation}\n\t\t\t\t\tonChange={(e) => this.selectOperation(q, c, e)}\n\t\t\t\t>\n\t\t\t\t\t{getOperationOptions()}\n\t\t\t\t</select>\n\t\t\t\t<select\n\t\t\t\t\tid=\"letter1\"\n\t\t\t\t\tvalue={letter1}\n\t\t\t\t\tonChange={(e) => this.selectLetter(q, c, 1, e)}\n\t\t\t\t\tdisabled={operation < 2}\n\t\t\t\t>\n\t\t\t\t\t{getLetterOptions(operation, 1)}\n\t\t\t\t</select>\n\t\t\t\t<select\n\t\t\t\t\tid=\"letter2\"\n\t\t\t\t\tvalue={letter2}\n\t\t\t\t\tonChange={(e) => this.selectLetter(q, c, 2, e)}\n\t\t\t\t\tdisabled={operation < 4}\n\t\t\t\t>\n\t\t\t\t\t{getLetterOptions(operation, 2)}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderQuestion = (question: Question, q: number) => {\n\t\tconst { choices, solutions } = question;\n\t\treturn (\n\t\t\t<div key={q} className=\"question\">\n\t\t\t\t<div className=\"choices\">\n\t\t\t\t\t<div className=\"questionNumber\">Question #{q + 1}</div>\n\t\t\t\t\t{choices.map((choice, c) => this.renderChoice(choice, q, c))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"solutions\">\n\t\t\t\t\t<div className=\"solutionsTitle\">Solutions</div>\n\t\t\t\t\t{solutions.length < 5 && solutions.map((solution) => {\n\t\t\t\t\t\tconst binary = solution.map((b) => b ? '1' : '0').join('');\n\t\t\t\t\t\tconst index = parseInt(binary, 2);\n\t\t\t\t\t\tconst letter = String.fromCharCode(index + 64);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"solution\" key={binary}>{binary} {letter}</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tquestions,\n\t\t} = this.state;\n\t\treturn (\n\t\t\t<div className=\"layout\">\n\t\t\t\t{questions.map(this.renderQuestion)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}